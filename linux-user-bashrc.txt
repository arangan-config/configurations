# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
if [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
fi

xhost +local:root > /dev/null 2>&1

# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

alias ls='ls --group-directories-first --time-style=+"%Y/%m/%d %H:%M" --color=auto -F'
alias ll='ls -lhAF --group-directories-first --time-style=+"%Y/%m/%d %H:%M" --color=auto -F'
alias l='ls -lhF --group-directories-first --time-style=+"%Y/%m/%d %H:%M" --color=auto -F'
alias la='ls -lahF --group-directories-first --time-style=+"%Y/%m/%d %H:%M" --color=auto -F'
alias grep='grep --color=tty -d skip'
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias cp='cp -i'                          # confirm before overwriting something
alias rm='rm -i'
alias mv='mv -i'
alias h='history 25'
alias j='jobs -l'

# vim stuff
export EDITOR=vim
export VISUAL=vim
alias vi=vim


# old prompt
#PS1='[\u@\h \W]\$ '

# Bash Colours
# http://misc.flogisoft.com/bash/tip_colors_and_formatting

# colour definitions
LightRed='\e[91m'
LightGreen='\e[92m'
LightYellow='\e[93m'
LightBlue='\e[94m'
LightMagenta='\e[95m'
LightCyan='\e[96m'
LightGray='\e[37m'

### Default colours are being defined by git prompt.. see below
#Black='\e[30m'
#Red='\e[31m'
#Green='\e[32m'
#Yellow='\e[33m'
#Blue='\e[34m'
#Magenta='\e[35m'
#Cyan='\e[36m'
#White='\e[97m'
DarkRed='\e[1;31m' # Red
DarkGreen='\e[1;32m' # Green
DarkYellow='\e[1;33m' # Yellow
DarkBlue='\e[1;34m' # Blue
DarkMagenta='\e[1;35m' # Magenta
DarkCyan='\e[1;36m' # Cyan
DarkWhite='\e[1;37m' # White
TextReset='\e[0m'
prompt='\$'

# set the prompt
PS1="${LightYellow}\u${DarkWhite}@${TextReset}${LightGreen}\h ${LightBlue}\w $prompt${TextReset} "
#PS1="\[$BoldYellow\]\u\[$BoldWhite\]@\[$BoldGreen\]\h \[$BoldBlue\]\w $prompt\[$TextReset\] "
#PS1="\[$LightYellow\]\u\[$BoldWhite\]@\[$LightGreen\]\h \[$LightBlue\]\w $prompt\[$TextReset\] "

GIT_PROMPT_ONLY_IN_REPO=1
GIT_PROMPT_THEME=Single_line_Ubuntu #Single_line #Single_line_Solarized #
source /data/arvind/gitprompts/bash-git-prompt/prompt-colors.sh  
case $GIT_PROMPT_THEME in
   "Single_line") GIT_PROMPT_START_USER="_LAST_COMMAND_INDICATOR_ ${White}${ResetColor} ${LightYellow}${PathShort}${ResetColor}";;
   "Single_line_Ubuntu") GIT_PROMPT_START_USER="_LAST_COMMAND_INDICATOR_ ${White}${ResetColor}${Cyan}${PathShort}${ResetColor}";;
   *) echo "Sorry .. default case hit";;
esac


# function _update_ps1() {
#       PS1="$(~/powerline-shell.py $? 2> /dev/null)"
#     }
# 
# if [ "$TERM" != "linux" ]; then
#     PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
# fi

list()
{
    echo "home - changes dir to /data/arvind"
    echo "gitprompt - initializes the git prompt for the current terminal session"
}

# use sud instead of sudo
sud()
{
  su -c "$*"
}

home()
{
  cd /data/arvind
}

gitprompt()
{
  source /data/arvind/gitprompts/bash-git-prompt/gitprompt.sh
}

bashpowerline()
{
  source /data/arvind/gitprompts/bash-powerline.sh
}

powerline()
{
  if [ -f ~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh ]; then 
    source ~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh; 
  fi
}
